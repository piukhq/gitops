---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: asset-register
  name: asset-register
  namespace: default
spec:
  progressDeadlineSeconds: 120
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: asset-register
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: app
        linkerd.io/inject: enabled
      labels:
        app: asset-register
    spec:
      containers:
        - name: app
          image: binkcore.azurecr.io/asset-register:latest
          ports:
            - containerPort: 9000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: azure-pgfs
                  key: common_asset_register
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 1000m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
        - name: migrator
          image: binkcore.azurecr.io/asset-register:latest
          command:
            - bash
            - -c
            - linkerd-await; python manage.py migrate; echo Done; tail -f /dev/null
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: azure-pgfs
                  key: common_asset_register
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
          imagePullPolicy: Always
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: binkcore.azurecr.io
