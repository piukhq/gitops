apiVersion: v1
kind: ServiceAccount
metadata:
  name: subnet-router
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: subnet-router
  namespace: tailscale
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
- apiGroups: [""]
  resourceNames: ["subnet-router"]
  resources: ["secrets"]
  verbs: ["get", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: subnet-router
subjects:
- kind: ServiceAccount
  name: subnet-router
roleRef:
  kind: Role
  name: subnet-router
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subnet-router
  namespace: tailscale
spec:
  selector:
    matchLabels:
      app: subnet-router
  template:
    metadata:
      labels:
        app: subnet-router
    spec:
      serviceAccountName: subnet-router
      containers:
        - name: tailscale
          imagePullPolicy: Always
          image: ghcr.io/tailscale/tailscale:latest
          env:
          - name: TS_KUBE_SECRET
            value: subnet-router
          - name: TS_HOSTNAME
            value: ${cluster_location}-${cluster_name}-subnet-router
          - name: TS_USERSPACE
            value: "true"
          - name: TS_API_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: operator-oauth
                key: client_id
          - name: TS_API_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: operator-oauth
                key: client_secret
          - name: TS_ROUTES
            value: ${postgres_subnet},${redis_subnet}
          - name: PROXY_TAGS
            value: tag:${cluster_name}
          resources:
            requests:
              memory: 128Mi
            limits:
              memory: 128Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
