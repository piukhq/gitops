---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cosmos
  namespace: default
  labels:
    app: api
spec:
  selector:
    matchLabels:
      app: cosmos
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        kubectl.kubernetes.io/default-container: app
        prometheus.io/port: '9100'
        prometheus.io/scrape: 'true'
        prometheus.io/job: cosmos
      labels:
        app: cosmos
        component: api
        azure.workload.identity/use: "true"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cosmos
                topologyKey: topology.kubernetes.io/zone
              weight: 100
      containers:
        - name: app
          env:
            - name: RABBITMQ_DSN
              valueFrom:
                secretKeyRef:
                  key: url
                  name: azure-cloudamqp
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  key: url_primary
                  name: azure-redis
            - name: BLOB_STORAGE_DSN
              valueFrom:
                secretKeyRef:
                  key: connection_string_primary
                  name: azure-storage
            - name: SQLALCHEMY_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  key: url_cosmos
                  name: azure-postgres
            - name: KEY_VAULT_URI
              valueFrom:
                secretKeyRef:
                  key: url
                  name: azure-keyvault
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          image: binkcore.azurecr.io/cosmos:latest
          imagePullPolicy: Always
          securityContext:
            runAsGroup: 65534
            runAsUser: 65534
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 256Mi
      serviceAccountName: cosmos
