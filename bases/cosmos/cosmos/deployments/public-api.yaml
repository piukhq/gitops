---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cosmos-public-api
  namespace: default
  labels:
    app: cosmos
    component: public-api
spec:
  selector:
    matchLabels:
      app: cosmos
      component: public-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        kubectl.kubernetes.io/default-container: app
        prometheus.io/port: "9100"
        prometheus.io/scrape: "true"
        prometheus.io/job: cosmos
      labels:
        app: cosmos
        aadpodidbinding: cosmos
        component: public-api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cosmos
                topologyKey: topology.kubernetes.io/zone
              weight: 100
      containers:
        - name: app
          command: ["linkerd-await", "--"]
          args:
            [
              "gunicorn",
              "--workers=2",
              "--threads=2",
              "--error-logfile=-",
              "--access-logfile=-",
              "--worker-class=uvicorn.workers.UvicornWorker",
              "--bind=0.0.0.0:9000",
              "--bind=0.0.0.0:9100",
              "cosmos.public_api.api.app:app",
            ]
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          image: binkcore.azurecr.io/cosmos:latest
          imagePullPolicy: Always
          securityContext:
            runAsGroup: 65534
            runAsUser: 65534
          resources:
            limits:
              cpu: 1000m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 256Mi
      imagePullSecrets:
        - name: binkcore.azurecr.io
      serviceAccountName: cosmos
      priorityClassName: bink-high-api
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cosmos
    component: public-api
  name: cosmos-public-api
  namespace: default
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9000
  selector:
    app: cosmos
    component: public-api
  sessionAffinity: None
  type: ClusterIP
